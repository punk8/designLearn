桥梁模式的用意是:
将抽象化与实现化脱耦，使得二者可以独立地变化

抽象化角色：抽象化给出的定义，并保存一个对实现化对象的引用，就是图像类中的形状父类。
修正抽象化角色：扩展抽象化角色，改变和修正父类对抽象化的定义，比如形状下有正方形，圆形等图形。
实现化角色：这个角色给出具体角色的接口，但是不给出具体的实现，这个接口不一定和抽象化角色的接口定义相同，
          实际上两者可以完全不一样，好比形状的颜色接口。
具体实现化角色：这个角色给出实现化角色接口的具体实现，好比各种具体的颜色。

桥接模式的优点:
1、分离抽象接口及其实现部分。
2、桥接模式提高了系统的可扩充性，在两个变化维度中任意扩展一个维度，都不需要修改原有系统。
3、实现细节对客户透明，可以对用户隐藏实现细节。

桥接模式的缺点:
1、桥接模式的引入会增加系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进
2、桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围具有一定的局限性。

